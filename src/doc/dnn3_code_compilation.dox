// doc/dnn3_code_compilation.dox


// Copyright 2015   Johns Hopkins University (author: Daniel Povey)

// See ../../COPYING for clarification regarding multiple authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

//  http://www.apache.org/licenses/LICENSE-2.0

// THIS CODE IS PROVIDED *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
// WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
// MERCHANTABLITY OR NON-INFRINGEMENT.
// See the Apache 2 License for the specific language governing permissions and
// limitations under the License.

namespace kaldi {
namespace nnet3 {

/**
  \page dnn3_code_compilation The "nnet3" setup from a code perspective: compilation

  \section dnn3_code_compilation_intro Introduction

  This page covers the compilation process in the "nnet3" setup.  It will
  generally only be of interest to those who want to understand the internals of
  the framework.

  - Up: \ref dnn3.
  - Previous: \ref dnn3_code_data_types
  - Next: \ref dnn3_code_optimization

  \section dnn3_compile_overview Overview of compilation

   We assume that the reader is familiar with the data types introduced in
   \ref dnn3_code_data_types.  The compilation process is something that
   takes as input an Nnet and a ComputationRequest, and outputs a
   NnetComputation.  The ComputationRequest includes a representation of
   what output indexes are requested and what input indexes are available;
   the reason why we don't just supply the output indexes and let the compiler
   work out what input indexes are required, is that some networks such as RNNs
   may consume an arbitrary amount of input to produce a given output.

   Something that could be considered part of the compilation process, but
   which we discuss in a separate page, is code optimization: see \ref dnn3_code_optimization.



  \section dnn3_compile_graph Creating a computation graph

  blah..
  

  Next: \ref dnn3_code_optimization

*/

}
}
